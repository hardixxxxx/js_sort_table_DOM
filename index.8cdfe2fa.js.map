{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,I,EASM,EACA,EAVA,EAAY,EAAG,MAAM,CAAC,SAAS,CAC/B,EAAY,EAAG,MAAM,CAAC,WAAW,CAEnC,EAAM,KAAK,CAAC,QAAQ,CAAC,EAAG,MAAM,IASlC,CAFM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,CADX,EAAQ,EAAM,OAAO,CAAC,EAAE,EACP,QAAQ,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,KAE1B,IAAI,CAAC,SAAC,CAAA,CAAI,CAAf,EACE,IAAM,EAAS,EAAG,KAAK,CATb,EASoB,CAAC,WAAW,CACpC,EAAS,EAAG,KAAK,CAVb,EAUoB,CAAC,WAAW,CAE1C,OAZqB,GAanB,IAAK,OACL,IAAK,WACH,OAAO,EAAO,aAAa,CAAC,EAE9B,KAAK,MACL,IAAK,SACH,OACE,WAAW,EAAO,OAAO,CAAC,UAAW,KACrC,WAAW,EAAO,OAAO,CAAC,UAAW,IAGzC,SACE,OAAO,CACX,CACF,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,MAAM,CAAC,E,GA3BrC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\ntable.addEventListener(\"click\", function(ev) {\n    var cellIndex = ev.target.cellIndex;\n    var sortParam = ev.target.textContent;\n    if (table.tHead.contains(ev.target)) sortTable(cellIndex, sortParam);\n});\nfunction sortTable(index, sortBy) {\n    var tBody = table.tBodies[0];\n    var rows = _to_consumable_array(tBody.children);\n    rows.sort(function(r1, r2) {\n        var value1 = r1.cells[index].textContent;\n        var value2 = r2.cells[index].textContent;\n        switch(sortBy){\n            case \"Name\":\n            case \"Position\":\n                return value1.localeCompare(value2);\n            case \"Age\":\n            case \"Salary\":\n                return parseFloat(value1.replace(/[^0-9]/g, \"\")) - parseFloat(value2.replace(/[^0-9]/g, \"\"));\n            default:\n                return 0;\n        }\n    });\n    rows.forEach(function(row) {\n        return tBody.append(row);\n    });\n}\n\n//# sourceMappingURL=index.8cdfe2fa.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\n\ntable.addEventListener('click', (ev) => {\n  const cellIndex = ev.target.cellIndex;\n  const sortParam = ev.target.textContent;\n\n  if (table.tHead.contains(ev.target)) {\n    sortTable(cellIndex, sortParam);\n  }\n});\n\nfunction sortTable(index, sortBy) {\n  const tBody = table.tBodies[0];\n  const rows = [...tBody.children];\n\n  rows.sort((r1, r2) => {\n    const value1 = r1.cells[index].textContent;\n    const value2 = r2.cells[index].textContent;\n\n    switch (sortBy) {\n      case 'Name':\n      case 'Position':\n        return value1.localeCompare(value2);\n\n      case 'Age':\n      case 'Salary':\n        return (\n          parseFloat(value1.replace(/[^0-9]/g, '')) -\n          parseFloat(value2.replace(/[^0-9]/g, ''))\n        );\n\n      default:\n        return 0;\n    }\n  });\n\n  rows.forEach((row) => tBody.append(row));\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","addEventListener","ev","tBody","rows","cellIndex","target","sortParam","textContent","tHead","contains","_array_without_holes","isArray","tBodies","children","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","r1","r2","value1","cells","value2","localeCompare","parseFloat","replace","forEach","row","append"],"version":3,"file":"index.8cdfe2fa.js.map"}